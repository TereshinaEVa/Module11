
import numpy as np
import pandas as pd
from PIL import Image, ImageDraw
import sys


# 1. NumPy - это пакет для научных вычислений. Он позволяет осуществлять быстрые операции с числовыми массивами,
# матрицами, среди которых: математические, логические, манипуляции с формами, сортировка, выборка, ввод/вывод,
# дискретные преобразования Фурье, основы линейной алгебры, базовые статистические операции, моделирование случайных
# ситуаций и многое другое. Для обеспечения высокой скорости вычислений используется векторизация операций (
# параллельные вычисления).
arr1 = np.arange(1, 6, 0.5)  # создает список чисел от 1 до 6 (не включительно) с шагом 0.5
arr2 = np.linspace(1, 6, 11)  # создание массива чисел от 1 до 6 включительно, равномерно распределенные на 11 элементов
print(f'Массив чисел на отрезке [1, 6): {arr1}')
print(f'Массив чисел на отрезке [1, 6] из 11 элементов: {arr2}')

print(f'Массив чисел на отрезке [1, 6) форматированный:\n{arr1.reshape(2,5)}')
print(f'Среднее арифметическое массива: {np.average(arr1)}')  # вычисление среднего арифметического чисел массива
print('\n')
matr1 = np.arange(4)
matr2 = np.arange(4, 8)  # создание матриц
print(f'Массив, полученная сложением двух: {np.concatenate((matr1,matr2))}')
m_and_ms = np.vstack((matr1,matr2))
print(f'Матрица, полученная при объединении по вертикали:\n {m_and_ms}')
print(f'Сумма значение матрицы: {np.sum(m_and_ms)}')  # вычисление суммы элементов матрицы
print(f'Возведение всех элементов в квадрат:\n{m_and_ms ** 2}')
print('\n')

# 2. Pandas - это пакет для обработки и анализа данных, представленных в виде таблиц в различных форматах (CSV, Excel,
# SQL и др.). Предлагает различные инструменты для фильтрации, агрегации и группировки данных. Принимает 2 типа данных:
# - Series - одномерная структура данных
# - DataFrame - двумерная структура данных

df = pd.DataFrame(np.random.random((10,4)), columns=['a','b','c','d',])
print(df)
print('\n')
print(df.loc[1])    # Вывод строки с индексом [1]
filtered_df = df[df['a'] < 0.5]  # Фильтрация данных: выбор строк, где значение в колонке 'a' меньше 0.5
print(filtered_df)
print(filtered_df)

# Pillow - Библиотека изображений Python, или PIL (Python Imaging Library) нужна для обработки графики в Python.


# Cоздаем новое изображение, на котором нарисован голубой прямоугольник поверх белого фона

img = Image.new('RGBA', (200, 200), 'white')  #Создаем новое изображение, у которого режим «RGBA», размер 200х200 и белый фон.
idraw = ImageDraw.Draw(img) #Из картинки создаеv объект ImageDraw.Чтобы на нем можно что-то нарисовать.

idraw.rectangle((10, 10, 100, 100), fill='blue')    # Рисуем прямоугольник

img.save('rectangle.png')   #сохраняем полученное изображение

# Поворачиваем картинку
# Открываем картинку, если она есть
try:
    new_image = Image.open("rectangle.png")
except IOError:
    print("Unable to load image")
    sys.exit(1)

rotated = new_image.rotate(180) # Поворачиваем и сохраняем новую
rotated.save('rectangle_roteted.png')
rotated = rotated.convert('RGB')    # для конвертации в jpg изменяем кодировку цвета
rotated.save('rectangle_roteted.jpg', 'JPEG')   # указываем новое название файла и уточняем формат